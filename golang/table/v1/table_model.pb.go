// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.7.1
// source: table_model.proto

package v1

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BeforeAndAfterType int32

const (
	BeforeAndAfterType_UNKNOWN_BEFORE_AND_AFTER BeforeAndAfterType = 0
	BeforeAndAfterType_BEFORE                   BeforeAndAfterType = 1
	BeforeAndAfterType_AFTER                    BeforeAndAfterType = 2
)

// Enum value maps for BeforeAndAfterType.
var (
	BeforeAndAfterType_name = map[int32]string{
		0: "UNKNOWN_BEFORE_AND_AFTER",
		1: "BEFORE",
		2: "AFTER",
	}
	BeforeAndAfterType_value = map[string]int32{
		"UNKNOWN_BEFORE_AND_AFTER": 0,
		"BEFORE":                   1,
		"AFTER":                    2,
	}
)

func (x BeforeAndAfterType) Enum() *BeforeAndAfterType {
	p := new(BeforeAndAfterType)
	*p = x
	return p
}

func (x BeforeAndAfterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeforeAndAfterType) Descriptor() protoreflect.EnumDescriptor {
	return file_table_model_proto_enumTypes[0].Descriptor()
}

func (BeforeAndAfterType) Type() protoreflect.EnumType {
	return &file_table_model_proto_enumTypes[0]
}

func (x BeforeAndAfterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeforeAndAfterType.Descriptor instead.
func (BeforeAndAfterType) EnumDescriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{0}
}

type TableMin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   int64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	TableId int64 `protobuf:"varint,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
}

func (x *TableMin) Reset() {
	*x = TableMin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMin) ProtoMessage() {}

func (x *TableMin) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMin.ProtoReflect.Descriptor instead.
func (*TableMin) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{0}
}

func (x *TableMin) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *TableMin) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

type TableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId            int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	TableId          int64  `protobuf:"varint,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AutoScheduleFlag int32  `protobuf:"varint,4,opt,name=autoScheduleFlag,proto3" json:"autoScheduleFlag,omitempty"`
	SummaryFlag      int32  `protobuf:"varint,5,opt,name=summaryFlag,proto3" json:"summaryFlag,omitempty"`
}

func (x *TableMeta) Reset() {
	*x = TableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMeta) ProtoMessage() {}

func (x *TableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMeta.ProtoReflect.Descriptor instead.
func (*TableMeta) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{1}
}

func (x *TableMeta) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *TableMeta) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableMeta) GetAutoScheduleFlag() int32 {
	if x != nil {
		return x.AutoScheduleFlag
	}
	return 0
}

func (x *TableMeta) GetSummaryFlag() int32 {
	if x != nil {
		return x.SummaryFlag
	}
	return 0
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // 其实就内部列的唯一id
	Label             string        `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`             // 标题
	AliasTitle        string        `protobuf:"bytes,3,opt,name=aliasTitle,proto3" json:"aliasTitle,omitempty"`   // 别名
	Description       string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // 描述
	IsSys             bool          `protobuf:"varint,5,opt,name=isSys,proto3" json:"isSys,omitempty"`
	IsOrg             bool          `protobuf:"varint,6,opt,name=isOrg,proto3" json:"isOrg,omitempty"`
	Writable          bool          `protobuf:"varint,7,opt,name=writable,proto3" json:"writable,omitempty"`
	Editable          bool          `protobuf:"varint,8,opt,name=editable,proto3" json:"editable,omitempty"`
	Unique            bool          `protobuf:"varint,9,opt,name=unique,proto3" json:"unique,omitempty"`                       // 该类型是否是唯一的列
	UniquePreHandler  string        `protobuf:"bytes,10,opt,name=uniquePreHandler,proto3" json:"uniquePreHandler,omitempty"`   // 唯一预处理函数，"urlDomainParse": url域名解析，保留一位
	SensitiveStrategy string        `protobuf:"bytes,11,opt,name=sensitiveStrategy,proto3" json:"sensitiveStrategy,omitempty"` // 脱敏策略
	SensitiveFlag     int32         `protobuf:"varint,12,opt,name=sensitiveFlag,proto3" json:"sensitiveFlag,omitempty"`        // 是否脱敏
	Field             *ColumnOption `protobuf:"bytes,13,opt,name=field,proto3" json:"field,omitempty"`                         // 列相关属性
	IsSysHiden        bool          `protobuf:"varint,14,opt,name=isSysHiden,proto3" json:"isSysHiden,omitempty"`              // 是否被系统隐藏，例如前后置默认添加，但初始状态是隐藏的
	SummaryFlag       int32         `protobuf:"varint,15,opt,name=summaryFlag,proto3" json:"summaryFlag,omitempty"`            // 是否是汇总表列标识,1:全部任务汇总表  3:项目汇总表
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{2}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Column) GetAliasTitle() string {
	if x != nil {
		return x.AliasTitle
	}
	return ""
}

func (x *Column) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Column) GetIsSys() bool {
	if x != nil {
		return x.IsSys
	}
	return false
}

func (x *Column) GetIsOrg() bool {
	if x != nil {
		return x.IsOrg
	}
	return false
}

func (x *Column) GetWritable() bool {
	if x != nil {
		return x.Writable
	}
	return false
}

func (x *Column) GetEditable() bool {
	if x != nil {
		return x.Editable
	}
	return false
}

func (x *Column) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Column) GetUniquePreHandler() string {
	if x != nil {
		return x.UniquePreHandler
	}
	return ""
}

func (x *Column) GetSensitiveStrategy() string {
	if x != nil {
		return x.SensitiveStrategy
	}
	return ""
}

func (x *Column) GetSensitiveFlag() int32 {
	if x != nil {
		return x.SensitiveFlag
	}
	return 0
}

func (x *Column) GetField() *ColumnOption {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *Column) GetIsSysHiden() bool {
	if x != nil {
		return x.IsSysHiden
	}
	return false
}

func (x *Column) GetSummaryFlag() int32 {
	if x != nil {
		return x.SummaryFlag
	}
	return 0
}

type ColumnOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ColumnType        `protobuf:"varint,1,opt,name=type,proto3,enum=table.v1.ColumnType" json:"type,omitempty"`                // 列类型
	CustomType string            `protobuf:"bytes,2,opt,name=customType,proto3" json:"customType,omitempty"`                              // 自定义类型
	DataType   StorageColumnType `protobuf:"varint,3,opt,name=dataType,proto3,enum=table.v1.StorageColumnType" json:"dataType,omitempty"` // 数据类型
	Props      *_struct.Struct   `protobuf:"bytes,4,opt,name=props,proto3" json:"props,omitempty"`                                        // 列类型下特有的数据
}

func (x *ColumnOption) Reset() {
	*x = ColumnOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOption) ProtoMessage() {}

func (x *ColumnOption) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOption.ProtoReflect.Descriptor instead.
func (*ColumnOption) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{3}
}

func (x *ColumnOption) GetType() ColumnType {
	if x != nil {
		return x.Type
	}
	return ColumnType_input
}

func (x *ColumnOption) GetCustomType() string {
	if x != nil {
		return x.CustomType
	}
	return ""
}

func (x *ColumnOption) GetDataType() StorageColumnType {
	if x != nil {
		return x.DataType
	}
	return StorageColumnType_STRING
}

func (x *ColumnOption) GetProps() *_struct.Struct {
	if x != nil {
		return x.Props
	}
	return nil
}

type ConditionRefSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId    int64           `protobuf:"varint,1,opt,name=tableId,proto3" json:"tableId,omitempty"`
	ColumnId   string          `protobuf:"bytes,2,opt,name=columnId,proto3" json:"columnId,omitempty"`
	Condition  *_struct.Struct `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	AggFunc    string          `protobuf:"bytes,4,opt,name=aggFunc,proto3" json:"aggFunc,omitempty"`
	NumberType int32           `protobuf:"varint,5,opt,name=numberType,proto3" json:"numberType,omitempty"`
}

func (x *ConditionRefSetting) Reset() {
	*x = ConditionRefSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionRefSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionRefSetting) ProtoMessage() {}

func (x *ConditionRefSetting) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionRefSetting.ProtoReflect.Descriptor instead.
func (*ConditionRefSetting) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{4}
}

func (x *ConditionRefSetting) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *ConditionRefSetting) GetColumnId() string {
	if x != nil {
		return x.ColumnId
	}
	return ""
}

func (x *ConditionRefSetting) GetCondition() *_struct.Struct {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ConditionRefSetting) GetAggFunc() string {
	if x != nil {
		return x.AggFunc
	}
	return ""
}

func (x *ConditionRefSetting) GetNumberType() int32 {
	if x != nil {
		return x.NumberType
	}
	return 0
}

// 这个主要用于解析老的form数据
type Columns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields       []*Column                     `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	BaseFields   []string                      `protobuf:"bytes,2,rep,name=baseFields,proto3" json:"baseFields,omitempty"`
	CustomConfig map[string]*_struct.ListValue `protobuf:"bytes,3,rep,name=customConfig,proto3" json:"customConfig,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Columns) Reset() {
	*x = Columns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Columns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Columns) ProtoMessage() {}

func (x *Columns) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Columns.ProtoReflect.Descriptor instead.
func (*Columns) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{5}
}

func (x *Columns) GetFields() []*Column {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Columns) GetBaseFields() []string {
	if x != nil {
		return x.BaseFields
	}
	return nil
}

func (x *Columns) GetCustomConfig() map[string]*_struct.ListValue {
	if x != nil {
		return x.CustomConfig
	}
	return nil
}

type TableColumnSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId int64   `protobuf:"varint,1,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Column  *Column `protobuf:"bytes,2,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *TableColumnSchema) Reset() {
	*x = TableColumnSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableColumnSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableColumnSchema) ProtoMessage() {}

func (x *TableColumnSchema) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableColumnSchema.ProtoReflect.Descriptor instead.
func (*TableColumnSchema) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{6}
}

func (x *TableColumnSchema) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableColumnSchema) GetColumn() *Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type TableSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId            int64     `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	TableId          int64     `protobuf:"varint,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Name             string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Columns          []*Column `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	AutoScheduleFlag int32     `protobuf:"varint,5,opt,name=autoScheduleFlag,proto3" json:"autoScheduleFlag,omitempty"`
}

func (x *TableSchema) Reset() {
	*x = TableSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchema) ProtoMessage() {}

func (x *TableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchema.ProtoReflect.Descriptor instead.
func (*TableSchema) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{7}
}

func (x *TableSchema) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *TableSchema) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableSchema) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableSchema) GetAutoScheduleFlag() int32 {
	if x != nil {
		return x.AutoScheduleFlag
	}
	return 0
}

type RelationRowMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowId      int64    `protobuf:"varint,1,opt,name=rowId,proto3" json:"rowId,omitempty"`
	Owner      []*Owner `protobuf:"bytes,3,rep,name=owner,proto3" json:"owner,omitempty"`
	TableId    int64    `protobuf:"varint,4,opt,name=tableId,proto3" json:"tableId,omitempty"`
	TableName  string   `protobuf:"bytes,5,opt,name=tableName,proto3" json:"tableName,omitempty"`
	StatusId   int64    `protobuf:"varint,6,opt,name=statusId,proto3" json:"statusId,omitempty"`
	StatusName string   `protobuf:"bytes,7,opt,name=statusName,proto3" json:"statusName,omitempty"`
	Title      string   `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *RelationRowMeta) Reset() {
	*x = RelationRowMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationRowMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationRowMeta) ProtoMessage() {}

func (x *RelationRowMeta) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationRowMeta.ProtoReflect.Descriptor instead.
func (*RelationRowMeta) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{8}
}

func (x *RelationRowMeta) GetRowId() int64 {
	if x != nil {
		return x.RowId
	}
	return 0
}

func (x *RelationRowMeta) GetOwner() []*Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *RelationRowMeta) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *RelationRowMeta) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *RelationRowMeta) GetStatusId() int64 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *RelationRowMeta) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *RelationRowMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId   string `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerName string `protobuf:"bytes,2,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{9}
}

func (x *Owner) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Owner) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

type AppTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  int64        `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Tables []*TableMeta `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *AppTables) Reset() {
	*x = AppTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTables) ProtoMessage() {}

func (x *AppTables) ProtoReflect() protoreflect.Message {
	mi := &file_table_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTables.ProtoReflect.Descriptor instead.
func (*AppTables) Descriptor() ([]byte, []int) {
	return file_table_model_proto_rawDescGZIP(), []int{10}
}

func (x *AppTables) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AppTables) GetTables() []*TableMeta {
	if x != nil {
		return x.Tables
	}
	return nil
}

var File_table_model_proto protoreflect.FileDescriptor

var file_table_model_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x9d, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0xe0, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x53, 0x79, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x4f, 0x72, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4f,
	0x72, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x72, 0x65, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x50, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x79, 0x73, 0x48, 0x69, 0x64, 0x65, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x79, 0x73, 0x48, 0x69, 0x64, 0x65, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67,
	0x67, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x67,
	0x46, 0x75, 0x6e, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x12, 0x28, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x5b, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x57, 0x0a, 0x11, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x0b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x3f, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x4e, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x2a, 0x49, 0x0a, 0x12, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x46,
	0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x46, 0x54, 0x45, 0x52, 0x10, 0x02, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x65, 0x61, 0x2e, 0x62, 0x6a, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x4c, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_table_model_proto_rawDescOnce sync.Once
	file_table_model_proto_rawDescData = file_table_model_proto_rawDesc
)

func file_table_model_proto_rawDescGZIP() []byte {
	file_table_model_proto_rawDescOnce.Do(func() {
		file_table_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_table_model_proto_rawDescData)
	})
	return file_table_model_proto_rawDescData
}

var file_table_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_table_model_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_table_model_proto_goTypes = []interface{}{
	(BeforeAndAfterType)(0),     // 0: table.v1.BeforeAndAfterType
	(*TableMin)(nil),            // 1: table.v1.TableMin
	(*TableMeta)(nil),           // 2: table.v1.TableMeta
	(*Column)(nil),              // 3: table.v1.Column
	(*ColumnOption)(nil),        // 4: table.v1.ColumnOption
	(*ConditionRefSetting)(nil), // 5: table.v1.ConditionRefSetting
	(*Columns)(nil),             // 6: table.v1.Columns
	(*TableColumnSchema)(nil),   // 7: table.v1.TableColumnSchema
	(*TableSchema)(nil),         // 8: table.v1.TableSchema
	(*RelationRowMeta)(nil),     // 9: table.v1.RelationRowMeta
	(*Owner)(nil),               // 10: table.v1.Owner
	(*AppTables)(nil),           // 11: table.v1.AppTables
	nil,                         // 12: table.v1.Columns.CustomConfigEntry
	(ColumnType)(0),             // 13: table.v1.ColumnType
	(StorageColumnType)(0),      // 14: table.v1.StorageColumnType
	(*_struct.Struct)(nil),      // 15: google.protobuf.Struct
	(*_struct.ListValue)(nil),   // 16: google.protobuf.ListValue
}
var file_table_model_proto_depIdxs = []int32{
	4,  // 0: table.v1.Column.field:type_name -> table.v1.ColumnOption
	13, // 1: table.v1.ColumnOption.type:type_name -> table.v1.ColumnType
	14, // 2: table.v1.ColumnOption.dataType:type_name -> table.v1.StorageColumnType
	15, // 3: table.v1.ColumnOption.props:type_name -> google.protobuf.Struct
	15, // 4: table.v1.ConditionRefSetting.condition:type_name -> google.protobuf.Struct
	3,  // 5: table.v1.Columns.fields:type_name -> table.v1.Column
	12, // 6: table.v1.Columns.customConfig:type_name -> table.v1.Columns.CustomConfigEntry
	3,  // 7: table.v1.TableColumnSchema.column:type_name -> table.v1.Column
	3,  // 8: table.v1.TableSchema.columns:type_name -> table.v1.Column
	10, // 9: table.v1.RelationRowMeta.owner:type_name -> table.v1.Owner
	2,  // 10: table.v1.AppTables.tables:type_name -> table.v1.TableMeta
	16, // 11: table.v1.Columns.CustomConfigEntry.value:type_name -> google.protobuf.ListValue
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_table_model_proto_init() }
func file_table_model_proto_init() {
	if File_table_model_proto != nil {
		return
	}
	file_table_model_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_table_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionRefSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Columns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableColumnSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationRowMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_table_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_table_model_proto_goTypes,
		DependencyIndexes: file_table_model_proto_depIdxs,
		EnumInfos:         file_table_model_proto_enumTypes,
		MessageInfos:      file_table_model_proto_msgTypes,
	}.Build()
	File_table_model_proto = out.File
	file_table_model_proto_rawDesc = nil
	file_table_model_proto_goTypes = nil
	file_table_model_proto_depIdxs = nil
}
