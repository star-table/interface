// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: automation_inner.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ApplyTemplate
type ApplyTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCreate            bool             `protobuf:"varint,1,opt,name=isCreate,proto3" json:"isCreate,omitempty"` // 是否是保存模板，否则是应用模板
	OrgIdMapping        *NumberMapping   `protobuf:"bytes,2,opt,name=orgIdMapping,proto3" json:"orgIdMapping,omitempty"`
	AppIdMapping        *StringMapping   `protobuf:"bytes,3,opt,name=appIdMapping,proto3" json:"appIdMapping,omitempty"`
	TableIdMappings     []*StringMapping `protobuf:"bytes,4,rep,name=tableIdMappings,proto3" json:"tableIdMappings,omitempty"`
	IterationIdMappings []*StringMapping `protobuf:"bytes,5,rep,name=iterationIdMappings,proto3" json:"iterationIdMappings,omitempty"`
}

func (x *ApplyTemplateReq) Reset() {
	*x = ApplyTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTemplateReq) ProtoMessage() {}

func (x *ApplyTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTemplateReq.ProtoReflect.Descriptor instead.
func (*ApplyTemplateReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{0}
}

func (x *ApplyTemplateReq) GetIsCreate() bool {
	if x != nil {
		return x.IsCreate
	}
	return false
}

func (x *ApplyTemplateReq) GetOrgIdMapping() *NumberMapping {
	if x != nil {
		return x.OrgIdMapping
	}
	return nil
}

func (x *ApplyTemplateReq) GetAppIdMapping() *StringMapping {
	if x != nil {
		return x.AppIdMapping
	}
	return nil
}

func (x *ApplyTemplateReq) GetTableIdMappings() []*StringMapping {
	if x != nil {
		return x.TableIdMappings
	}
	return nil
}

func (x *ApplyTemplateReq) GetIterationIdMappings() []*StringMapping {
	if x != nil {
		return x.IterationIdMappings
	}
	return nil
}

type ApplyTemplateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyTemplateReply) Reset() {
	*x = ApplyTemplateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTemplateReply) ProtoMessage() {}

func (x *ApplyTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTemplateReply.ProtoReflect.Descriptor instead.
func (*ApplyTemplateReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{1}
}

// HandleWorkflowExecute
type HandleWorkflowExecuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId         int64  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	WorkflowId    int64  `protobuf:"varint,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	ExecutionId   int64  `protobuf:"varint,3,opt,name=executionId,proto3" json:"executionId,omitempty"`
	TriggerResult string `protobuf:"bytes,4,opt,name=triggerResult,proto3" json:"triggerResult,omitempty"`
}

func (x *HandleWorkflowExecuteReq) Reset() {
	*x = HandleWorkflowExecuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowExecuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowExecuteReq) ProtoMessage() {}

func (x *HandleWorkflowExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowExecuteReq.ProtoReflect.Descriptor instead.
func (*HandleWorkflowExecuteReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{2}
}

func (x *HandleWorkflowExecuteReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *HandleWorkflowExecuteReq) GetWorkflowId() int64 {
	if x != nil {
		return x.WorkflowId
	}
	return 0
}

func (x *HandleWorkflowExecuteReq) GetExecutionId() int64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *HandleWorkflowExecuteReq) GetTriggerResult() string {
	if x != nil {
		return x.TriggerResult
	}
	return ""
}

type HandleWorkflowExecuteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HandleWorkflowExecuteReply) Reset() {
	*x = HandleWorkflowExecuteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowExecuteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowExecuteReply) ProtoMessage() {}

func (x *HandleWorkflowExecuteReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowExecuteReply.ProtoReflect.Descriptor instead.
func (*HandleWorkflowExecuteReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{3}
}

// HandleWorkflowError
type HandleWorkflowErrorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId  int64 `protobuf:"varint,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	ExecutionId int64 `protobuf:"varint,2,opt,name=executionId,proto3" json:"executionId,omitempty"`
}

func (x *HandleWorkflowErrorReq) Reset() {
	*x = HandleWorkflowErrorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorReq) ProtoMessage() {}

func (x *HandleWorkflowErrorReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorReq.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{4}
}

func (x *HandleWorkflowErrorReq) GetWorkflowId() int64 {
	if x != nil {
		return x.WorkflowId
	}
	return 0
}

func (x *HandleWorkflowErrorReq) GetExecutionId() int64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

type HandleWorkflowErrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HandleWorkflowErrorReply) Reset() {
	*x = HandleWorkflowErrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorReply) ProtoMessage() {}

func (x *HandleWorkflowErrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorReply.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{5}
}

// BatchRebuildActive
type BatchRebuildActiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *BatchRebuildActiveReq) Reset() {
	*x = BatchRebuildActiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRebuildActiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRebuildActiveReq) ProtoMessage() {}

func (x *BatchRebuildActiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRebuildActiveReq.ProtoReflect.Descriptor instead.
func (*BatchRebuildActiveReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{6}
}

func (x *BatchRebuildActiveReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type BatchRebuildActiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchRebuildActiveReply) Reset() {
	*x = BatchRebuildActiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRebuildActiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRebuildActiveReply) ProtoMessage() {}

func (x *BatchRebuildActiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRebuildActiveReply.ProtoReflect.Descriptor instead.
func (*BatchRebuildActiveReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{7}
}

// GlobalSwitchOff
type GlobalSwitchOffReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GlobalSwitchOffReq) Reset() {
	*x = GlobalSwitchOffReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSwitchOffReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSwitchOffReq) ProtoMessage() {}

func (x *GlobalSwitchOffReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSwitchOffReq.ProtoReflect.Descriptor instead.
func (*GlobalSwitchOffReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{8}
}

type GlobalSwitchOffReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GlobalSwitchOffReply) Reset() {
	*x = GlobalSwitchOffReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSwitchOffReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSwitchOffReply) ProtoMessage() {}

func (x *GlobalSwitchOffReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSwitchOffReply.ProtoReflect.Descriptor instead.
func (*GlobalSwitchOffReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{9}
}

// CreateTodo
type CreateTodoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerBy              *TriggerBy     `protobuf:"bytes,1,opt,name=triggerBy,proto3" json:"triggerBy,omitempty"`
	OrgId                  int64          `protobuf:"varint,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	AppId                  string         `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	TableId                string         `protobuf:"bytes,4,opt,name=tableId,proto3" json:"tableId,omitempty"`
	IssueId                int64          `protobuf:"varint,5,opt,name=issueId,proto3" json:"issueId,omitempty"`
	TriggerUserId          int64          `protobuf:"varint,6,opt,name=triggerUserId,proto3" json:"triggerUserId,omitempty"`
	AllowWithdrawByTrigger bool           `protobuf:"varint,7,opt,name=allowWithdrawByTrigger,proto3" json:"allowWithdrawByTrigger,omitempty"`
	AllowUrgeByTrigger     bool           `protobuf:"varint,8,opt,name=allowUrgeByTrigger,proto3" json:"allowUrgeByTrigger,omitempty"`
	Type                   TodoType       `protobuf:"varint,9,opt,name=type,proto3,enum=automation.v1.TodoType" json:"type,omitempty"`
	Operators              []*PeopleByIds `protobuf:"bytes,10,rep,name=operators,proto3" json:"operators,omitempty"`
	AuditFlowName          string         `protobuf:"bytes,11,opt,name=auditFlowName,proto3" json:"auditFlowName,omitempty"`
	AuditFlowId            string         `protobuf:"bytes,12,opt,name=auditFlowId,proto3" json:"auditFlowId,omitempty"`
	IssueTitle             string         `protobuf:"bytes,13,opt,name=issueTitle,proto3" json:"issueTitle,omitempty"`
	// Types that are assignable to Parameters:
	//	*CreateTodoReq_TodoAudit
	//	*CreateTodoReq_TodoFillIn
	Parameters isCreateTodoReq_Parameters `protobuf_oneof:"parameters"`
}

func (x *CreateTodoReq) Reset() {
	*x = CreateTodoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTodoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTodoReq) ProtoMessage() {}

func (x *CreateTodoReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTodoReq.ProtoReflect.Descriptor instead.
func (*CreateTodoReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTodoReq) GetTriggerBy() *TriggerBy {
	if x != nil {
		return x.TriggerBy
	}
	return nil
}

func (x *CreateTodoReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CreateTodoReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateTodoReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *CreateTodoReq) GetIssueId() int64 {
	if x != nil {
		return x.IssueId
	}
	return 0
}

func (x *CreateTodoReq) GetTriggerUserId() int64 {
	if x != nil {
		return x.TriggerUserId
	}
	return 0
}

func (x *CreateTodoReq) GetAllowWithdrawByTrigger() bool {
	if x != nil {
		return x.AllowWithdrawByTrigger
	}
	return false
}

func (x *CreateTodoReq) GetAllowUrgeByTrigger() bool {
	if x != nil {
		return x.AllowUrgeByTrigger
	}
	return false
}

func (x *CreateTodoReq) GetType() TodoType {
	if x != nil {
		return x.Type
	}
	return TodoType_Audit
}

func (x *CreateTodoReq) GetOperators() []*PeopleByIds {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *CreateTodoReq) GetAuditFlowName() string {
	if x != nil {
		return x.AuditFlowName
	}
	return ""
}

func (x *CreateTodoReq) GetAuditFlowId() string {
	if x != nil {
		return x.AuditFlowId
	}
	return ""
}

func (x *CreateTodoReq) GetIssueTitle() string {
	if x != nil {
		return x.IssueTitle
	}
	return ""
}

func (m *CreateTodoReq) GetParameters() isCreateTodoReq_Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (x *CreateTodoReq) GetTodoAudit() *ParameterTodoAudit {
	if x, ok := x.GetParameters().(*CreateTodoReq_TodoAudit); ok {
		return x.TodoAudit
	}
	return nil
}

func (x *CreateTodoReq) GetTodoFillIn() *ParameterTodoFillIn {
	if x, ok := x.GetParameters().(*CreateTodoReq_TodoFillIn); ok {
		return x.TodoFillIn
	}
	return nil
}

type isCreateTodoReq_Parameters interface {
	isCreateTodoReq_Parameters()
}

type CreateTodoReq_TodoAudit struct {
	TodoAudit *ParameterTodoAudit `protobuf:"bytes,14,opt,name=todoAudit,proto3,oneof"`
}

type CreateTodoReq_TodoFillIn struct {
	TodoFillIn *ParameterTodoFillIn `protobuf:"bytes,15,opt,name=todoFillIn,proto3,oneof"`
}

func (*CreateTodoReq_TodoAudit) isCreateTodoReq_Parameters() {}

func (*CreateTodoReq_TodoFillIn) isCreateTodoReq_Parameters() {}

type CreateTodoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTodoReply) Reset() {
	*x = CreateTodoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTodoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTodoReply) ProtoMessage() {}

func (x *CreateTodoReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTodoReply.ProtoReflect.Descriptor instead.
func (*CreateTodoReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{11}
}

// UpdateTodo
type UpdateTodoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Op     TodoOp     `protobuf:"varint,2,opt,name=op,proto3,enum=automation.v1.TodoOp" json:"op,omitempty"`
	Msg    string     `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Status TodoStatus `protobuf:"varint,4,opt,name=status,proto3,enum=automation.v1.TodoStatus" json:"status,omitempty"`
}

func (x *UpdateTodoReq) Reset() {
	*x = UpdateTodoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodoReq) ProtoMessage() {}

func (x *UpdateTodoReq) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodoReq.ProtoReflect.Descriptor instead.
func (*UpdateTodoReq) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTodoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTodoReq) GetOp() TodoOp {
	if x != nil {
		return x.Op
	}
	return TodoOp_OpInit
}

func (x *UpdateTodoReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateTodoReq) GetStatus() TodoStatus {
	if x != nil {
		return x.Status
	}
	return TodoStatus_SUnFinished
}

type UpdateTodoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTodoReply) Reset() {
	*x = UpdateTodoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_automation_inner_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTodoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTodoReply) ProtoMessage() {}

func (x *UpdateTodoReply) ProtoReflect() protoreflect.Message {
	mi := &file_automation_inner_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTodoReply.ProtoReflect.Descriptor instead.
func (*UpdateTodoReply) Descriptor() ([]byte, []int) {
	return file_automation_inner_proto_rawDescGZIP(), []int{13}
}

var File_automation_inner_proto protoreflect.FileDescriptor

var file_automation_inner_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x13,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x18, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x5a, 0x0a, 0x16, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x15, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x71, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xcc, 0x05, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x42,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x42,
	0x79, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x42, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x42, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x72, 0x67, 0x65, 0x42, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x72,
	0x67, 0x65, 0x42, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x6f,
	0x64, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x6f, 0x64, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x44, 0x0a,
	0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x6f, 0x46,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c,
	0x6c, 0x49, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x96, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x64, 0x6f, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x11, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x32, 0xab, 0x07, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x22, 0x21, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21,
	0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x7d, 0x12, 0x81, 0x01, 0x0a,
	0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66,
	0x12, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x4f, 0x66, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2f, 0x6f, 0x66, 0x66, 0x3a, 0x01, 0x2a,
	0x12, 0x65, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x1c,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x6f, 0x64, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x0e, 0x2f, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x64, 0x6f, 0x3a, 0x01, 0x2a, 0x42, 0x3c,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x65, 0x61, 0x2e, 0x62, 0x6a, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x4c, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_automation_inner_proto_rawDescOnce sync.Once
	file_automation_inner_proto_rawDescData = file_automation_inner_proto_rawDesc
)

func file_automation_inner_proto_rawDescGZIP() []byte {
	file_automation_inner_proto_rawDescOnce.Do(func() {
		file_automation_inner_proto_rawDescData = protoimpl.X.CompressGZIP(file_automation_inner_proto_rawDescData)
	})
	return file_automation_inner_proto_rawDescData
}

var file_automation_inner_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_automation_inner_proto_goTypes = []interface{}{
	(*ApplyTemplateReq)(nil),           // 0: automation.v1.ApplyTemplateReq
	(*ApplyTemplateReply)(nil),         // 1: automation.v1.ApplyTemplateReply
	(*HandleWorkflowExecuteReq)(nil),   // 2: automation.v1.HandleWorkflowExecuteReq
	(*HandleWorkflowExecuteReply)(nil), // 3: automation.v1.HandleWorkflowExecuteReply
	(*HandleWorkflowErrorReq)(nil),     // 4: automation.v1.HandleWorkflowErrorReq
	(*HandleWorkflowErrorReply)(nil),   // 5: automation.v1.HandleWorkflowErrorReply
	(*BatchRebuildActiveReq)(nil),      // 6: automation.v1.BatchRebuildActiveReq
	(*BatchRebuildActiveReply)(nil),    // 7: automation.v1.BatchRebuildActiveReply
	(*GlobalSwitchOffReq)(nil),         // 8: automation.v1.GlobalSwitchOffReq
	(*GlobalSwitchOffReply)(nil),       // 9: automation.v1.GlobalSwitchOffReply
	(*CreateTodoReq)(nil),              // 10: automation.v1.CreateTodoReq
	(*CreateTodoReply)(nil),            // 11: automation.v1.CreateTodoReply
	(*UpdateTodoReq)(nil),              // 12: automation.v1.UpdateTodoReq
	(*UpdateTodoReply)(nil),            // 13: automation.v1.UpdateTodoReply
	(*NumberMapping)(nil),              // 14: automation.v1.NumberMapping
	(*StringMapping)(nil),              // 15: automation.v1.StringMapping
	(*TriggerBy)(nil),                  // 16: automation.v1.TriggerBy
	(TodoType)(0),                      // 17: automation.v1.TodoType
	(*PeopleByIds)(nil),                // 18: automation.v1.PeopleByIds
	(*ParameterTodoAudit)(nil),         // 19: automation.v1.ParameterTodoAudit
	(*ParameterTodoFillIn)(nil),        // 20: automation.v1.ParameterTodoFillIn
	(TodoOp)(0),                        // 21: automation.v1.TodoOp
	(TodoStatus)(0),                    // 22: automation.v1.TodoStatus
}
var file_automation_inner_proto_depIdxs = []int32{
	14, // 0: automation.v1.ApplyTemplateReq.orgIdMapping:type_name -> automation.v1.NumberMapping
	15, // 1: automation.v1.ApplyTemplateReq.appIdMapping:type_name -> automation.v1.StringMapping
	15, // 2: automation.v1.ApplyTemplateReq.tableIdMappings:type_name -> automation.v1.StringMapping
	15, // 3: automation.v1.ApplyTemplateReq.iterationIdMappings:type_name -> automation.v1.StringMapping
	16, // 4: automation.v1.CreateTodoReq.triggerBy:type_name -> automation.v1.TriggerBy
	17, // 5: automation.v1.CreateTodoReq.type:type_name -> automation.v1.TodoType
	18, // 6: automation.v1.CreateTodoReq.operators:type_name -> automation.v1.PeopleByIds
	19, // 7: automation.v1.CreateTodoReq.todoAudit:type_name -> automation.v1.ParameterTodoAudit
	20, // 8: automation.v1.CreateTodoReq.todoFillIn:type_name -> automation.v1.ParameterTodoFillIn
	21, // 9: automation.v1.UpdateTodoReq.op:type_name -> automation.v1.TodoOp
	22, // 10: automation.v1.UpdateTodoReq.status:type_name -> automation.v1.TodoStatus
	0,  // 11: automation.v1.AutomationInner.ApplyTemplate:input_type -> automation.v1.ApplyTemplateReq
	2,  // 12: automation.v1.AutomationInner.HandleWorkflowExecute:input_type -> automation.v1.HandleWorkflowExecuteReq
	4,  // 13: automation.v1.AutomationInner.HandleWorkflowError:input_type -> automation.v1.HandleWorkflowErrorReq
	6,  // 14: automation.v1.AutomationInner.BatchRebuildActive:input_type -> automation.v1.BatchRebuildActiveReq
	8,  // 15: automation.v1.AutomationInner.GlobalSwitchOff:input_type -> automation.v1.GlobalSwitchOffReq
	10, // 16: automation.v1.AutomationInner.CreateTodo:input_type -> automation.v1.CreateTodoReq
	12, // 17: automation.v1.AutomationInner.UpdateTodo:input_type -> automation.v1.UpdateTodoReq
	1,  // 18: automation.v1.AutomationInner.ApplyTemplate:output_type -> automation.v1.ApplyTemplateReply
	3,  // 19: automation.v1.AutomationInner.HandleWorkflowExecute:output_type -> automation.v1.HandleWorkflowExecuteReply
	5,  // 20: automation.v1.AutomationInner.HandleWorkflowError:output_type -> automation.v1.HandleWorkflowErrorReply
	7,  // 21: automation.v1.AutomationInner.BatchRebuildActive:output_type -> automation.v1.BatchRebuildActiveReply
	9,  // 22: automation.v1.AutomationInner.GlobalSwitchOff:output_type -> automation.v1.GlobalSwitchOffReply
	11, // 23: automation.v1.AutomationInner.CreateTodo:output_type -> automation.v1.CreateTodoReply
	13, // 24: automation.v1.AutomationInner.UpdateTodo:output_type -> automation.v1.UpdateTodoReply
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_automation_inner_proto_init() }
func file_automation_inner_proto_init() {
	if File_automation_inner_proto != nil {
		return
	}
	file_automation_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_automation_inner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyTemplateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowExecuteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowExecuteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRebuildActiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRebuildActiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSwitchOffReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSwitchOffReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTodoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTodoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_automation_inner_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTodoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_automation_inner_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*CreateTodoReq_TodoAudit)(nil),
		(*CreateTodoReq_TodoFillIn)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_automation_inner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_automation_inner_proto_goTypes,
		DependencyIndexes: file_automation_inner_proto_depIdxs,
		MessageInfos:      file_automation_inner_proto_msgTypes,
	}.Build()
	File_automation_inner_proto = out.File
	file_automation_inner_proto_rawDesc = nil
	file_automation_inner_proto_goTypes = nil
	file_automation_inner_proto_depIdxs = nil
}
