syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";

package go_workflow.v1;
option go_package = "github.com/star-table/interface/golang/go_workflow/v1;v1";

service WorkFlowTask {
  // Complete 审批
  rpc Complete(CompleteRequest) returns (CompleteReply) {
    option (google.api.http) = {
      post: "/v1/goWorkflow/task/complete"
      body: "*"
    };
  }

  rpc Withdraw(WithdrawRequest) returns (WithdrawReply) {
    option (google.api.http) = {
      post: "/v1/goWorkflow/task/withdraw"
      body: "*"
    };
  }
}

message CompleteRequest {
  int64 taskId = 1[(validate.rules).int64 = {gt: 0}];
  int64 userId = 2[(validate.rules).int64 = {gt: 0}];
  string userName = 3[(validate.rules).string.min_len = 1];
  bool pass = 4;
  int64 orgId = 5[(validate.rules).int64 = {gt: 0}];
  int64 processInstanceId = 6;
  string comment = 7;
  string candidate = 8;
}

message CompleteReply {
}

message WithdrawRequest {
  int64 taskId = 1;
  int64 userId = 2[(validate.rules).int64 = {gt: 0}];
  string userName = 3;
  int64 orgId = 4[(validate.rules).int64 = {gt: 0}];
  int64 processInstanceId = 5;
  string comment = 6;
  string candidate = 7;
}

message WithdrawReply {

}